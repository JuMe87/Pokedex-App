let pokemonRepository = (function () {
  let t = [],
    e = "https://pokeapi.co/api/v2/pokemon/?limit=150";
  function n(e) {
    "object" == typeof e && "name" in e
      ? t.push(e)
      : console.log("pokemon is not correct");
  }
  function o(t) {
    let e = t.detailsUrl;
    return fetch(e)
      .then(function (t) {
        return t.json();
      })
      .then(function (e) {
        (t.imageUrl = e.sprites.front_default),
          (t.height = e.height),
          (t.weight = e.weight),
          (t.types = []),
          e.types.forEach(function (e) {
            t.types.push(e.type.name);
          });
      })
      .catch(function (t) {
        console.error(t);
      });
  }
  function i(t) {
    o(t).then(function () {
      a(t), console.log(t);
    });
  }
  function a(t) {
    let e = $(".modal-body"),
      n = $(".modal-title");
    n.empty(), e.empty();
    let o = $('<h1 class="text-uppercase">' + t.name + "</h1>");
    n.append(o);
    let i = document.createElement("img");
    i.classList.add("modal-img"), (i.src = t.imageUrl);
    let a = $("<p>height: " + t.height + "</p>"),
      c = $("<p>weight: " + t.weight + "</p>"),
      l = $("<p>types: " + t.types.join(", ") + "</p>");
    e.append(i), e.append(a), e.append(c), e.append(l);
  }
  return {
    add: n,
    getAll: function () {
      return t;
    },
    addListItem: function (t) {
      let e = document.querySelector(".pokemon-list"),
        n = document.createElement("button");
      (n.innerText = t.name),
        n.classList.add(
          "list-group-item",
          "list-group-item-action",
          "text-center",
          "text-normal"
        ),
        n.setAttribute("data-toggle", "modal"),
        n.setAttribute("data-target", "#pokemonModal"),
        e.appendChild(n),
        (function (t, e) {
          t.addEventListener("click", function () {
            i(e);
          });
        })(n, t);
    },
    loadList: function () {
      return fetch(e)
        .then(function (t) {
          return t.json();
        })
        .then(function (t) {
          t.results.forEach(function (t) {
            n({ name: t.name, detailsUrl: t.url });
          });
        })
        .catch(function (t) {
          console.error(t);
        });
    },
    loadDetails: o,
    showDetails: i,
    showModal: a,
  };
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (t) {
    pokemonRepository.addListItem(t);
  });
});
